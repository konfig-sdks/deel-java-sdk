/*
 * Deel REST API
 * API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.
 *
 * The version of the OpenAPI document: 1.25.0
 * Contact: apiteam@deel.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ContractContainer;
import com.konfigthis.client.model.ContractContainerOngoingTimeBased;
import com.konfigthis.client.model.ContractContainerPayAsYouGoTimeBased;
import com.konfigthis.client.model.ContractContainerPaygMilestones;
import com.konfigthis.client.model.ContractContainerPaygTasks;
import com.konfigthis.client.model.ContractDetailsToAmend;
import com.konfigthis.client.model.ContractTerminationResultContainer;
import com.konfigthis.client.model.ContractToAmendDetailsContainer;
import com.konfigthis.client.model.ContractToCreateContainer;
import com.konfigthis.client.model.ContractToCreateContainerOngoingTimeBased;
import com.konfigthis.client.model.ContractToCreateContainerPayAsYouGoTimeBased;
import com.konfigthis.client.model.ContractToCreateContainerPaygMilestones;
import com.konfigthis.client.model.ContractToCreateContainerPaygTasks;
import com.konfigthis.client.model.ContractToCreateOngoingTimeBased;
import com.konfigthis.client.model.ContractToCreatePayAsYouGoTimeBased;
import com.konfigthis.client.model.ContractToCreatePaygMilestones;
import com.konfigthis.client.model.ContractToCreatePaygTasks;
import com.konfigthis.client.model.ContractToTerminate;
import com.konfigthis.client.model.ContractToTerminateContainer;
import com.konfigthis.client.model.GenericResultCreated;
import com.konfigthis.client.model.GenericResultDeleted;
import com.konfigthis.client.model.PremiumResultAddedContainer;
import com.konfigthis.client.model.PremiumToAdd;
import com.konfigthis.client.model.PremiumToAddContainer;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContractorsApi
 */
@Disabled
public class ContractorsApiTest {

    private static ContractorsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ContractorsApi(apiClient);
    }

    /**
     * Amend contract
     *
     * Amend the details of a contract. Please note that if the contract is already signed or active, then the update will have to be approved and re-signed for to take effect.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void amendContractDetailsTest() throws ApiException {
        ContractDetailsToAmend data = null;
        String contractId = null;
        GenericResultCreated response = api.amendContractDetails(data, contractId)
                .execute();
        // TODO: test validations
    }

    /**
     * Create a new contract
     *
     * Create a new Deel contract.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewDeelContractTest() throws ApiException {
        Object data = null;
        ContractContainer response = api.createNewDeelContract(data)
                .execute();
        // TODO: test validations
    }

    /**
     * Create a new contract (fixed-rate)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewFixedRateContractTest() throws ApiException {
        ContractToCreateOngoingTimeBased data = null;
        ContractContainerOngoingTimeBased response = api.createNewFixedRateContract(data)
                .execute();
        // TODO: test validations
    }

    /**
     * Create a new contract (milestone-based)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewMilestoneContractTest() throws ApiException {
        ContractToCreatePaygMilestones data = null;
        ContractContainerPaygMilestones response = api.createNewMilestoneContract(data)
                .execute();
        // TODO: test validations
    }

    /**
     * Create a new contract (task-based)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewTaskBasedContractTest() throws ApiException {
        ContractToCreatePaygTasks data = null;
        ContractContainerPaygTasks response = api.createNewTaskBasedContract(data)
                .execute();
        // TODO: test validations
    }

    /**
     * Create a new contract (time-based)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewTimeBasedContractTest() throws ApiException {
        ContractToCreatePayAsYouGoTimeBased data = null;
        ContractContainerPayAsYouGoTimeBased response = api.createNewTimeBasedContract(data)
                .execute();
        // TODO: test validations
    }

    /**
     * Preview a contract agreement
     *
     * Retrieve an IC and EOR contract agreement content in HTML. If no template is specified, the default or currently assigned template will be used. This endpoint does not support Global Payroll contract type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getContractPreviewTest() throws ApiException {
        String contractId = null;
        String templateId = null;
        String response = api.getContractPreview(contractId)
                .templateId(templateId)
                .execute();
        // TODO: test validations
    }

    /**
     * Downgrade from Premium
     *
     * Remove Deel Premium from an existing contract.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removePremiumTest() throws ApiException {
        String contractId = null;
        String reason = null;
        GenericResultDeleted response = api.removePremium(contractId)
                .reason(reason)
                .execute();
        // TODO: test validations
    }

    /**
     * Terminate contract
     *
     * Terminate an active contract.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void terminateContractTest() throws ApiException {
        ContractToTerminate data = null;
        String contractId = null;
        ContractTerminationResultContainer response = api.terminateContract(data, contractId)
                .execute();
        // TODO: test validations
    }

    /**
     * Upgrade to Premium
     *
     * Add additional protection against misclassification by upgrading to Deel Premium.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void upgradeToPremiumTest() throws ApiException {
        PremiumToAdd data = null;
        String contractId = null;
        PremiumResultAddedContainer response = api.upgradeToPremium(data, contractId)
                .execute();
        // TODO: test validations
    }

}
