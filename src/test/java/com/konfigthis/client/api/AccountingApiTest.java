/*
 * Deel REST API
 * API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.
 *
 * The version of the OpenAPI document: 1.25.0
 * Contact: apiteam@deel.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.DeelInvoiceListContainer;
import com.konfigthis.client.model.InvoiceDownloadLinkContainer;
import com.konfigthis.client.model.InvoiceListContainer;
import java.time.LocalDate;
import com.konfigthis.client.model.PaymentBreakDownContainer;
import com.konfigthis.client.model.PaymentListContainer;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountingApi
 */
@Disabled
public class AccountingApiTest {

    private static AccountingApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new AccountingApi(apiClient);
    }

    /**
     * Retrieve Deel invoices
     *
     * Retrieve a list of invoices related to Deel fees.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDeelInvoicesTest() throws ApiException {
        Double limit = null;
        Double offset = null;
        DeelInvoiceListContainer response = api.getDeelInvoices()
                .limit(limit)
                .offset(offset)
                .execute();
        // TODO: test validations
    }

    /**
     * Download invoice PDF
     *
     * Get link to download the invoice PDF.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInvoicePdfDownloadLinkTest() throws ApiException {
        String invoiceId = null;
        InvoiceDownloadLinkContainer response = api.getInvoicePdfDownloadLink(invoiceId)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve invoices
     *
     * Retrieve a list of paid invoices for your workforce.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPaidInvoicesTest() throws ApiException {
        String issuedFromDate = null;
        String issuedToDate = null;
        Double limit = null;
        Double offset = null;
        InvoiceListContainer response = api.getPaidInvoices()
                .issuedFromDate(issuedFromDate)
                .issuedToDate(issuedToDate)
                .limit(limit)
                .offset(offset)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve a payment breakdown
     *
     * Get a full breakdown of a payment made to Deel. Breakdown will include individual invoices and Deel fee as line items.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPaymentBreakdownTest() throws ApiException {
        String paymentId = null;
        PaymentBreakDownContainer response = api.getPaymentBreakdown(paymentId)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve payment reciepts
     *
     * Retrieve a list of payments made to Deel.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPaymentReceiptsTest() throws ApiException {
        LocalDate dateFrom = null;
        LocalDate dateTo = null;
        Object currencies = null;
        Object entities = null;
        PaymentListContainer response = api.getPaymentReceipts()
                .dateFrom(dateFrom)
                .dateTo(dateTo)
                .currencies(currencies)
                .entities(entities)
                .execute();
        // TODO: test validations
    }

}
