/*
 * Deel REST API
 * API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.
 *
 * The version of the OpenAPI document: 1.25.0
 * Contact: apiteam@deel.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CreateTimeoff;
import com.konfigthis.client.model.CreateTimeoffContainer;
import com.konfigthis.client.model.EorClientTimeoffsContainer;
import com.konfigthis.client.model.EorEntitlementsContainer;
import com.konfigthis.client.model.EorTimeoffsContainer;
import com.konfigthis.client.model.EorTimeoffsItemContainer;
import com.konfigthis.client.model.GenericResultDeleted;
import com.konfigthis.client.model.GenericResultUpdated;
import com.konfigthis.client.model.TimeoffReview;
import com.konfigthis.client.model.TimeoffToReviewContainer;
import com.konfigthis.client.model.TimeoffTypeListContainer;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TimeOffApi
 */
@Disabled
public class TimeOffApiTest {

    private static TimeOffApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new TimeOffApi(apiClient);
    }

    /**
     * Add a time off request (obsolete)
     *
     * Add a time off request for a full-time employee.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addRequestObsoleteTest() throws ApiException {
        CreateTimeoff data = null;
        String contractId = null;
        EorTimeoffsItemContainer response = api.addRequestObsolete(data, contractId)
                .execute();
        // TODO: test validations
    }

    /**
     * Cancel a time off request (obsolete)
     *
     * Cancel a time off request for an employee.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelRequestObsoleteTest() throws ApiException {
        String contractId = null;
        String timeoffId = null;
        GenericResultDeleted response = api.cancelRequestObsolete(contractId, timeoffId)
                .execute();
        // TODO: test validations
    }

    /**
     * Edit a time off request (obsolete)
     *
     * Edit a time off request for a full-time employee.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void editRequestObsoleteTest() throws ApiException {
        CreateTimeoff data = null;
        String contractId = null;
        String timeoffId = null;
        EorTimeoffsItemContainer response = api.editRequestObsolete(data, contractId, timeoffId)
                .execute();
        // TODO: test validations
    }

    /**
     * List of time offs (obsolete)
     *
     * List of time offs for all employees in your organization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllObsoleteTest() throws ApiException {
        EorClientTimeoffsContainer response = api.getAllObsolete()
                .execute();
        // TODO: test validations
    }

    /**
     * Time-off types
     *
     * Retrieve a list of pre-defined time off types to register in Deel platform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTimeOffTypesTest() throws ApiException {
        TimeoffTypeListContainer response = api.getTimeOffTypes()
                .execute();
        // TODO: test validations
    }

    /**
     * List time off by contract (obsolete)
     *
     * Retrieve the list of time off requests by an employee.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listByContractTest() throws ApiException {
        String contractId = null;
        EorTimeoffsContainer response = api.listByContract(contractId)
                .execute();
        // TODO: test validations
    }

    /**
     * List time off entitlements (obsolete)
     *
     * Retrieve a list of time off entitlements for a full-time employee.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listEntitlementsTest() throws ApiException {
        String contractId = null;
        EorEntitlementsContainer response = api.listEntitlements(contractId)
                .execute();
        // TODO: test validations
    }

    /**
     * Review a time off request (obsolete)
     *
     * Approve or decline an employee&#39;s time off request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void manageRequestTest() throws ApiException {
        TimeoffReview data = null;
        String timeoffId = null;
        GenericResultUpdated response = api.manageRequest(data, timeoffId)
                .execute();
        // TODO: test validations
    }

}
