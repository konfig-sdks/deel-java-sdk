/*
 * Deel REST API
 * API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.
 *
 * The version of the OpenAPI document: 1.25.0
 * Contact: apiteam@deel.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.GenericResultDeleted;
import com.konfigthis.client.model.InputToCreatePgoTask;
import com.konfigthis.client.model.PgoTaskReviewsByIdToCreate;
import com.konfigthis.client.model.PgoTaskReviewsToCreate;
import com.konfigthis.client.model.PgoTaskToCreate;
import com.konfigthis.client.model.RequestBodyToCreatePgoTaskReviewsByIdReviewsContainer;
import com.konfigthis.client.model.RequestBodyToCreatePgoTaskReviewsReviewsContainer;
import com.konfigthis.client.model.TaskCreatedContainer;
import com.konfigthis.client.model.TaskListContainer;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TasksApi
 */
@Disabled
public class TasksApiTest {

    private static TasksApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new TasksApi(apiClient);
    }

    /**
     * Create new task
     *
     * Create a new task for the contractor.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewTaskTest() throws ApiException {
        PgoTaskToCreate data = null;
        String contractId = null;
        TaskCreatedContainer response = api.createNewTask(data, contractId)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete task
     *
     * Delete task from the contract.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteFromContractTest() throws ApiException {
        String contractId = null;
        String taskId = null;
        String reason = null;
        GenericResultDeleted response = api.deleteFromContract(contractId, taskId)
                .reason(reason)
                .execute();
        // TODO: test validations
    }

    /**
     * List of tasks
     *
     * Retrieve a list of tasks for a given contract.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getContractTasksTest() throws ApiException {
        String contractId = null;
        TaskListContainer response = api.getContractTasks(contractId)
                .execute();
        // TODO: test validations
    }

    /**
     * Review multiple tasks
     *
     * Review multiple tasks to approve or decline the submitted work.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reviewManyTasksTest() throws ApiException {
        PgoTaskReviewsToCreate data = null;
        String contractId = null;
        TaskListContainer response = api.reviewManyTasks(data, contractId)
                .execute();
        // TODO: test validations
    }

    /**
     * Review a single task
     *
     * Review a single task to approve or decline the submitted work.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void submitTaskReviewTest() throws ApiException {
        PgoTaskReviewsByIdToCreate data = null;
        String contractId = null;
        String taskId = null;
        TaskListContainer response = api.submitTaskReview(data, contractId, taskId)
                .execute();
        // TODO: test validations
    }

}
