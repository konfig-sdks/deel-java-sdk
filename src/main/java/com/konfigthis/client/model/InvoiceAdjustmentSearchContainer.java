/*
 * Deel REST API
 * API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.
 *
 * The version of the OpenAPI document: 1.25.0
 * Contact: apiteam@deel.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.SortDirEnum;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * This is a model to make it easier to understand and restrict search parameters
 */
@ApiModel(description = "This is a model to make it easier to understand and restrict search parameters")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class InvoiceAdjustmentSearchContainer {
  public static final String SERIALIZED_NAME_LIMIT = "limit";
  @SerializedName(SERIALIZED_NAME_LIMIT)
  private String limit = "10";

  public static final String SERIALIZED_NAME_OFFSET = "offset";
  @SerializedName(SERIALIZED_NAME_OFFSET)
  private String offset = "10";

  public static final String SERIALIZED_NAME_ORDER_DIRECTION = "order_direction";
  @SerializedName(SERIALIZED_NAME_ORDER_DIRECTION)
  private SortDirEnum orderDirection;

  public static final String SERIALIZED_NAME_CONTRACT_ID = "contract_id";
  @SerializedName(SERIALIZED_NAME_CONTRACT_ID)
  private String contractId;

  public static final String SERIALIZED_NAME_INVOICE_ID = "invoice_id";
  @SerializedName(SERIALIZED_NAME_INVOICE_ID)
  private String invoiceId;

  public static final String SERIALIZED_NAME_REPORTER_ID = "reporter_id";
  @SerializedName(SERIALIZED_NAME_REPORTER_ID)
  private String reporterId;

  public static final String SERIALIZED_NAME_CONTRACT_TYPES = "contract_types";
  @SerializedName(SERIALIZED_NAME_CONTRACT_TYPES)
  private Object contractTypes = null;

  public static final String SERIALIZED_NAME_TYPES = "types";
  @SerializedName(SERIALIZED_NAME_TYPES)
  private Object types = null;

  public static final String SERIALIZED_NAME_STATUSES = "statuses";
  @SerializedName(SERIALIZED_NAME_STATUSES)
  private Object statuses = null;

  public static final String SERIALIZED_NAME_DATE_FROM = "date_from";
  @SerializedName(SERIALIZED_NAME_DATE_FROM)
  private LocalDate dateFrom;

  public static final String SERIALIZED_NAME_DATE_TO = "date_to";
  @SerializedName(SERIALIZED_NAME_DATE_TO)
  private LocalDate dateTo;

  public InvoiceAdjustmentSearchContainer() {
  }

  public InvoiceAdjustmentSearchContainer limit(String limit) {
    
    
    
    
    this.limit = limit;
    return this;
  }

   /**
   * Return a page of results with given number of records.
   * @return limit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10", value = "Return a page of results with given number of records.")

  public String getLimit() {
    return limit;
  }


  public void setLimit(String limit) {
    
    
    
    this.limit = limit;
  }


  public InvoiceAdjustmentSearchContainer offset(String offset) {
    
    
    
    
    this.offset = offset;
    return this;
  }

   /**
   * Get offset
   * @return offset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10", value = "")

  public String getOffset() {
    return offset;
  }


  public void setOffset(String offset) {
    
    
    
    this.offset = offset;
  }


  public InvoiceAdjustmentSearchContainer orderDirection(SortDirEnum orderDirection) {
    
    
    
    
    this.orderDirection = orderDirection;
    return this;
  }

   /**
   * Get orderDirection
   * @return orderDirection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SortDirEnum getOrderDirection() {
    return orderDirection;
  }


  public void setOrderDirection(SortDirEnum orderDirection) {
    
    
    
    this.orderDirection = orderDirection;
  }


  public InvoiceAdjustmentSearchContainer contractId(String contractId) {
    
    
    
    
    this.contractId = contractId;
    return this;
  }

   /**
   * Get contractId
   * @return contractId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getContractId() {
    return contractId;
  }


  public void setContractId(String contractId) {
    
    
    
    this.contractId = contractId;
  }


  public InvoiceAdjustmentSearchContainer invoiceId(String invoiceId) {
    
    
    
    
    this.invoiceId = invoiceId;
    return this;
  }

   /**
   * Get invoiceId
   * @return invoiceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInvoiceId() {
    return invoiceId;
  }


  public void setInvoiceId(String invoiceId) {
    
    
    
    this.invoiceId = invoiceId;
  }


  public InvoiceAdjustmentSearchContainer reporterId(String reporterId) {
    
    
    
    
    this.reporterId = reporterId;
    return this;
  }

   /**
   * Get reporterId
   * @return reporterId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReporterId() {
    return reporterId;
  }


  public void setReporterId(String reporterId) {
    
    
    
    this.reporterId = reporterId;
  }


  public InvoiceAdjustmentSearchContainer contractTypes(Object contractTypes) {
    
    
    
    
    this.contractTypes = contractTypes;
    return this;
  }

   /**
   * Get contractTypes
   * @return contractTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getContractTypes() {
    return contractTypes;
  }


  public void setContractTypes(Object contractTypes) {
    
    
    
    this.contractTypes = contractTypes;
  }


  public InvoiceAdjustmentSearchContainer types(Object types) {
    
    
    
    
    this.types = types;
    return this;
  }

   /**
   * Get types
   * @return types
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getTypes() {
    return types;
  }


  public void setTypes(Object types) {
    
    
    
    this.types = types;
  }


  public InvoiceAdjustmentSearchContainer statuses(Object statuses) {
    
    
    
    
    this.statuses = statuses;
    return this;
  }

   /**
   * Get statuses
   * @return statuses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getStatuses() {
    return statuses;
  }


  public void setStatuses(Object statuses) {
    
    
    
    this.statuses = statuses;
  }


  public InvoiceAdjustmentSearchContainer dateFrom(LocalDate dateFrom) {
    
    
    
    
    this.dateFrom = dateFrom;
    return this;
  }

   /**
   * Short date in format ISO-8601 (YYYY-MM-DD). For example: 2022-12-31.
   * @return dateFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Short date in format ISO-8601 (YYYY-MM-DD). For example: 2022-12-31.")

  public LocalDate getDateFrom() {
    return dateFrom;
  }


  public void setDateFrom(LocalDate dateFrom) {
    
    
    
    this.dateFrom = dateFrom;
  }


  public InvoiceAdjustmentSearchContainer dateTo(LocalDate dateTo) {
    
    
    
    
    this.dateTo = dateTo;
    return this;
  }

   /**
   * Short date in format ISO-8601 (YYYY-MM-DD). For example: 2022-12-31.
   * @return dateTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Short date in format ISO-8601 (YYYY-MM-DD). For example: 2022-12-31.")

  public LocalDate getDateTo() {
    return dateTo;
  }


  public void setDateTo(LocalDate dateTo) {
    
    
    
    this.dateTo = dateTo;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the InvoiceAdjustmentSearchContainer instance itself
   */
  public InvoiceAdjustmentSearchContainer putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoiceAdjustmentSearchContainer invoiceAdjustmentSearchContainer = (InvoiceAdjustmentSearchContainer) o;
    return Objects.equals(this.limit, invoiceAdjustmentSearchContainer.limit) &&
        Objects.equals(this.offset, invoiceAdjustmentSearchContainer.offset) &&
        Objects.equals(this.orderDirection, invoiceAdjustmentSearchContainer.orderDirection) &&
        Objects.equals(this.contractId, invoiceAdjustmentSearchContainer.contractId) &&
        Objects.equals(this.invoiceId, invoiceAdjustmentSearchContainer.invoiceId) &&
        Objects.equals(this.reporterId, invoiceAdjustmentSearchContainer.reporterId) &&
        Objects.equals(this.contractTypes, invoiceAdjustmentSearchContainer.contractTypes) &&
        Objects.equals(this.types, invoiceAdjustmentSearchContainer.types) &&
        Objects.equals(this.statuses, invoiceAdjustmentSearchContainer.statuses) &&
        Objects.equals(this.dateFrom, invoiceAdjustmentSearchContainer.dateFrom) &&
        Objects.equals(this.dateTo, invoiceAdjustmentSearchContainer.dateTo)&&
        Objects.equals(this.additionalProperties, invoiceAdjustmentSearchContainer.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(limit, offset, orderDirection, contractId, invoiceId, reporterId, contractTypes, types, statuses, dateFrom, dateTo, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoiceAdjustmentSearchContainer {\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    orderDirection: ").append(toIndentedString(orderDirection)).append("\n");
    sb.append("    contractId: ").append(toIndentedString(contractId)).append("\n");
    sb.append("    invoiceId: ").append(toIndentedString(invoiceId)).append("\n");
    sb.append("    reporterId: ").append(toIndentedString(reporterId)).append("\n");
    sb.append("    contractTypes: ").append(toIndentedString(contractTypes)).append("\n");
    sb.append("    types: ").append(toIndentedString(types)).append("\n");
    sb.append("    statuses: ").append(toIndentedString(statuses)).append("\n");
    sb.append("    dateFrom: ").append(toIndentedString(dateFrom)).append("\n");
    sb.append("    dateTo: ").append(toIndentedString(dateTo)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("limit");
    openapiFields.add("offset");
    openapiFields.add("order_direction");
    openapiFields.add("contract_id");
    openapiFields.add("invoice_id");
    openapiFields.add("reporter_id");
    openapiFields.add("contract_types");
    openapiFields.add("types");
    openapiFields.add("statuses");
    openapiFields.add("date_from");
    openapiFields.add("date_to");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to InvoiceAdjustmentSearchContainer
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!InvoiceAdjustmentSearchContainer.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InvoiceAdjustmentSearchContainer is not found in the empty JSON string", InvoiceAdjustmentSearchContainer.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("limit") != null && !jsonObj.get("limit").isJsonNull()) && !jsonObj.get("limit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `limit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("limit").toString()));
      }
      if ((jsonObj.get("offset") != null && !jsonObj.get("offset").isJsonNull()) && !jsonObj.get("offset").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `offset` to be a primitive type in the JSON string but got `%s`", jsonObj.get("offset").toString()));
      }
      if ((jsonObj.get("contract_id") != null && !jsonObj.get("contract_id").isJsonNull()) && !jsonObj.get("contract_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contract_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contract_id").toString()));
      }
      if ((jsonObj.get("invoice_id") != null && !jsonObj.get("invoice_id").isJsonNull()) && !jsonObj.get("invoice_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invoice_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invoice_id").toString()));
      }
      if ((jsonObj.get("reporter_id") != null && !jsonObj.get("reporter_id").isJsonNull()) && !jsonObj.get("reporter_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reporter_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reporter_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InvoiceAdjustmentSearchContainer.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InvoiceAdjustmentSearchContainer' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InvoiceAdjustmentSearchContainer> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InvoiceAdjustmentSearchContainer.class));

       return (TypeAdapter<T>) new TypeAdapter<InvoiceAdjustmentSearchContainer>() {
           @Override
           public void write(JsonWriter out, InvoiceAdjustmentSearchContainer value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public InvoiceAdjustmentSearchContainer read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             InvoiceAdjustmentSearchContainer instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of InvoiceAdjustmentSearchContainer given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of InvoiceAdjustmentSearchContainer
  * @throws IOException if the JSON string is invalid with respect to InvoiceAdjustmentSearchContainer
  */
  public static InvoiceAdjustmentSearchContainer fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InvoiceAdjustmentSearchContainer.class);
  }

 /**
  * Convert an instance of InvoiceAdjustmentSearchContainer to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

