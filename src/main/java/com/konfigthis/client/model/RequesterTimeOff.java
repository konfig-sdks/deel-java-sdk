/*
 * Deel REST API
 * API specification for Deel HR user provisioning API. This YAML file is a preview of the API Deel is building. We are looking forward to your feedback.
 *
 * The version of the OpenAPI document: 1.25.0
 * Contact: apiteam@deel.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * RequesterTimeOff
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class RequesterTimeOff {
  public static final String SERIALIZED_NAME_IS_PART_TIME = "is_part_time";
  @SerializedName(SERIALIZED_NAME_IS_PART_TIME)
  private Boolean isPartTime;

  public static final String SERIALIZED_NAME_HAS_REACHED_END_DATE = "has_reached_end_date";
  @SerializedName(SERIALIZED_NAME_HAS_REACHED_END_DATE)
  private Boolean hasReachedEndDate;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private String uuid;

  public static final String SERIALIZED_NAME_HRIS_PROFILE_ID = "hris_profile_id";
  @SerializedName(SERIALIZED_NAME_HRIS_PROFILE_ID)
  private String hrisProfileId;

  public static final String SERIALIZED_NAME_CLIENT_PROFILE_ID = "client_profile_id";
  @SerializedName(SERIALIZED_NAME_CLIENT_PROFILE_ID)
  private String clientProfileId;

  public static final String SERIALIZED_NAME_ORGANIZATION_ID = "organization_id";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_ID)
  private Double organizationId;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_WORKER_TYPE = "worker_type";
  @SerializedName(SERIALIZED_NAME_WORKER_TYPE)
  private String workerType;

  public static final String SERIALIZED_NAME_END_DATE = "end_date";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private String endDate;

  public static final String SERIALIZED_NAME_PART_TIME_PERCENTAGE = "part_time_percentage";
  @SerializedName(SERIALIZED_NAME_PART_TIME_PERCENTAGE)
  private String partTimePercentage;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt;

  public RequesterTimeOff() {
  }

  public RequesterTimeOff isPartTime(Boolean isPartTime) {
    
    
    
    
    this.isPartTime = isPartTime;
    return this;
  }

   /**
   * Get isPartTime
   * @return isPartTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getIsPartTime() {
    return isPartTime;
  }


  public void setIsPartTime(Boolean isPartTime) {
    
    
    
    this.isPartTime = isPartTime;
  }


  public RequesterTimeOff hasReachedEndDate(Boolean hasReachedEndDate) {
    
    
    
    
    this.hasReachedEndDate = hasReachedEndDate;
    return this;
  }

   /**
   * Get hasReachedEndDate
   * @return hasReachedEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getHasReachedEndDate() {
    return hasReachedEndDate;
  }


  public void setHasReachedEndDate(Boolean hasReachedEndDate) {
    
    
    
    this.hasReachedEndDate = hasReachedEndDate;
  }


  public RequesterTimeOff id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of this resource.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "Unique identifier of this resource.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public RequesterTimeOff uuid(String uuid) {
    
    
    
    
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8bf2ee9c-aa43-4d8e-9f6f-ee8b880b3607", value = "")

  public String getUuid() {
    return uuid;
  }


  public void setUuid(String uuid) {
    
    
    
    this.uuid = uuid;
  }


  public RequesterTimeOff hrisProfileId(String hrisProfileId) {
    
    
    
    
    this.hrisProfileId = hrisProfileId;
    return this;
  }

   /**
   * Get hrisProfileId
   * @return hrisProfileId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "05ab39e5-1200-4cc1-90bf-0969e02bcf02", value = "")

  public String getHrisProfileId() {
    return hrisProfileId;
  }


  public void setHrisProfileId(String hrisProfileId) {
    
    
    
    this.hrisProfileId = hrisProfileId;
  }


  public RequesterTimeOff clientProfileId(String clientProfileId) {
    
    
    
    
    this.clientProfileId = clientProfileId;
    return this;
  }

   /**
   * Get clientProfileId
   * @return clientProfileId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "08462445-3a37-4d3e-8413-bf28a125dabd", value = "")

  public String getClientProfileId() {
    return clientProfileId;
  }


  public void setClientProfileId(String clientProfileId) {
    
    
    
    this.clientProfileId = clientProfileId;
  }


  public RequesterTimeOff organizationId(Double organizationId) {
    
    
    
    
    this.organizationId = organizationId;
    return this;
  }

  public RequesterTimeOff organizationId(Integer organizationId) {
    
    
    
    
    this.organizationId = organizationId.doubleValue();
    return this;
  }

   /**
   * Get organizationId
   * @return organizationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "306415", value = "")

  public Double getOrganizationId() {
    return organizationId;
  }


  public void setOrganizationId(Double organizationId) {
    
    
    
    this.organizationId = organizationId;
  }


  public RequesterTimeOff country(String country) {
    
    
    
    
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "LB", value = "")

  public String getCountry() {
    return country;
  }


  public void setCountry(String country) {
    
    
    
    this.country = country;
  }


  public RequesterTimeOff workerType(String workerType) {
    
    
    
    
    this.workerType = workerType;
    return this;
  }

   /**
   * Get workerType
   * @return workerType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "hris_direct_employee", value = "")

  public String getWorkerType() {
    return workerType;
  }


  public void setWorkerType(String workerType) {
    
    
    
    this.workerType = workerType;
  }


  public RequesterTimeOff endDate(String endDate) {
    
    
    
    
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2023-08-04T09:03:31.577Z", value = "")

  public String getEndDate() {
    return endDate;
  }


  public void setEndDate(String endDate) {
    
    
    
    this.endDate = endDate;
  }


  public RequesterTimeOff partTimePercentage(String partTimePercentage) {
    
    
    
    
    this.partTimePercentage = partTimePercentage;
    return this;
  }

   /**
   * Get partTimePercentage
   * @return partTimePercentage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "", value = "")

  public String getPartTimePercentage() {
    return partTimePercentage;
  }


  public void setPartTimePercentage(String partTimePercentage) {
    
    
    
    this.partTimePercentage = partTimePercentage;
  }


  public RequesterTimeOff createdAt(String createdAt) {
    
    
    
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2023-08-04T09:03:31.577Z", value = "")

  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    
    
    
    this.createdAt = createdAt;
  }


  public RequesterTimeOff updatedAt(String updatedAt) {
    
    
    
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2023-08-04T09:03:31.577Z", value = "")

  public String getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(String updatedAt) {
    
    
    
    this.updatedAt = updatedAt;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the RequesterTimeOff instance itself
   */
  public RequesterTimeOff putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequesterTimeOff requesterTimeOff = (RequesterTimeOff) o;
    return Objects.equals(this.isPartTime, requesterTimeOff.isPartTime) &&
        Objects.equals(this.hasReachedEndDate, requesterTimeOff.hasReachedEndDate) &&
        Objects.equals(this.id, requesterTimeOff.id) &&
        Objects.equals(this.uuid, requesterTimeOff.uuid) &&
        Objects.equals(this.hrisProfileId, requesterTimeOff.hrisProfileId) &&
        Objects.equals(this.clientProfileId, requesterTimeOff.clientProfileId) &&
        Objects.equals(this.organizationId, requesterTimeOff.organizationId) &&
        Objects.equals(this.country, requesterTimeOff.country) &&
        Objects.equals(this.workerType, requesterTimeOff.workerType) &&
        Objects.equals(this.endDate, requesterTimeOff.endDate) &&
        Objects.equals(this.partTimePercentage, requesterTimeOff.partTimePercentage) &&
        Objects.equals(this.createdAt, requesterTimeOff.createdAt) &&
        Objects.equals(this.updatedAt, requesterTimeOff.updatedAt)&&
        Objects.equals(this.additionalProperties, requesterTimeOff.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isPartTime, hasReachedEndDate, id, uuid, hrisProfileId, clientProfileId, organizationId, country, workerType, endDate, partTimePercentage, createdAt, updatedAt, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequesterTimeOff {\n");
    sb.append("    isPartTime: ").append(toIndentedString(isPartTime)).append("\n");
    sb.append("    hasReachedEndDate: ").append(toIndentedString(hasReachedEndDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    hrisProfileId: ").append(toIndentedString(hrisProfileId)).append("\n");
    sb.append("    clientProfileId: ").append(toIndentedString(clientProfileId)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    workerType: ").append(toIndentedString(workerType)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    partTimePercentage: ").append(toIndentedString(partTimePercentage)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("is_part_time");
    openapiFields.add("has_reached_end_date");
    openapiFields.add("id");
    openapiFields.add("uuid");
    openapiFields.add("hris_profile_id");
    openapiFields.add("client_profile_id");
    openapiFields.add("organization_id");
    openapiFields.add("country");
    openapiFields.add("worker_type");
    openapiFields.add("end_date");
    openapiFields.add("part_time_percentage");
    openapiFields.add("created_at");
    openapiFields.add("updated_at");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to RequesterTimeOff
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!RequesterTimeOff.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RequesterTimeOff is not found in the empty JSON string", RequesterTimeOff.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("uuid") != null && !jsonObj.get("uuid").isJsonNull()) && !jsonObj.get("uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uuid").toString()));
      }
      if ((jsonObj.get("hris_profile_id") != null && !jsonObj.get("hris_profile_id").isJsonNull()) && !jsonObj.get("hris_profile_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hris_profile_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hris_profile_id").toString()));
      }
      if ((jsonObj.get("client_profile_id") != null && !jsonObj.get("client_profile_id").isJsonNull()) && !jsonObj.get("client_profile_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `client_profile_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("client_profile_id").toString()));
      }
      if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if ((jsonObj.get("worker_type") != null && !jsonObj.get("worker_type").isJsonNull()) && !jsonObj.get("worker_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `worker_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("worker_type").toString()));
      }
      if ((jsonObj.get("end_date") != null && !jsonObj.get("end_date").isJsonNull()) && !jsonObj.get("end_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `end_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("end_date").toString()));
      }
      if ((jsonObj.get("part_time_percentage") != null && !jsonObj.get("part_time_percentage").isJsonNull()) && !jsonObj.get("part_time_percentage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `part_time_percentage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("part_time_percentage").toString()));
      }
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if ((jsonObj.get("updated_at") != null && !jsonObj.get("updated_at").isJsonNull()) && !jsonObj.get("updated_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated_at").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RequesterTimeOff.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RequesterTimeOff' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RequesterTimeOff> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RequesterTimeOff.class));

       return (TypeAdapter<T>) new TypeAdapter<RequesterTimeOff>() {
           @Override
           public void write(JsonWriter out, RequesterTimeOff value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public RequesterTimeOff read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             RequesterTimeOff instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of RequesterTimeOff given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RequesterTimeOff
  * @throws IOException if the JSON string is invalid with respect to RequesterTimeOff
  */
  public static RequesterTimeOff fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RequesterTimeOff.class);
  }

 /**
  * Convert an instance of RequesterTimeOff to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

